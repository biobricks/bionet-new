{
    "$schema": "https://vega.github.io/schema/vega/v4.json",
    "width": 2000,
    "height": 2000,
    "padding": 0,
    "autosize": "fit",
    "signals": [
        {
            "name": "cx",
            "update": "width / 2"
        },
        {
            "name": "cy",
            "update": "height / 2"
        },
        {
            "name": "textSize",
            "value": 8,
            "bind": {
                "input": "range",
                "min": 2,
                "max": 20,
                "step": 1
            }
        },
        {
            "name": "textOffset",
            "value": 2,
            "bind": {
                "input": "range",
                "min": 0,
                "max": 10,
                "step": 1
            }
        },
        {
            "name": "colorIn",
            "value": "firebrick"
        },
        {
            "name": "colorOut",
            "value": "forestgreen"
        },
        {
            "name": "rotate",
            "value": 0,
            "bind": {
                "input": "range",
                "min": 0,
                "max": 360,
                "step": 1
            }
        },
        {
            "name": "nodeRadius",
            "value": 50,
            "bind": {
                "input": "range",
                "min": 1,
                "max": 50,
                "step": 1
            }
        },
        {
            "name": "nodeCharge",
            "value": -100
        },
        {
            "name": "linkDistance",
            "value": 75,
            "bind": {
                "input": "range",
                "min": 5,
                "max": 100,
                "step": 1
            }
        },
        {
            "name": "static",
            "value": true,
            "bind": {
                "input": "checkbox"
            }
        },
        {
            "description": "State variable for active node fix status.",
            "name": "fix",
            "value": false,
            "on": [
                {
                    "events": "symbol:mouseout[!event.buttons], window:mouseup",
                    "update": "false"
                },
                {
                    "events": "symbol:mouseover",
                    "update": "fix || true"
                },
                {
                    "events": "[symbol:mousedown, window:mouseup] > window:mousemove!",
                    "update": "xy()",
                    "force": true
                }
            ]
        },
        {
            "description": "Graph node most recently interacted with.",
            "name": "node",
            "value": null,
            "on": [
                {
                    "events": "symbol:mouseover",
                    "update": "fix === true ? item() : node"
                }
            ]
        },
        {
            "description": "Flag to restart Force simulation upon data changes.",
            "name": "restart",
            "value": false,
            "on": [
                {
                    "events": {
                        "signal": "fix"
                    },
                    "update": "fix && fix.length"
                }
            ]
        }
    ],
    "data": [
        {
            "name": "node-data",
            "values": [],
            "format": {
                "type": "json",
                "property": "nodes"
            }
        },
        {
            "name": "link-data",
            "values": [],
            "format": {
                "type": "json",
                "property": "links"
            }
        }
    ],
    "scales": [
        {
            "name": "color",
            "type": "ordinal",
            "domain": {
                "data": "node-data",
                "field": "group"
            },
            "range": {
                "scheme": "category20c"
            }
        },
        {
            "name": "text-size",
            "type": "ordinal",
            "domain": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "range": [
                26,
                24,
                20,
                16,
                12,
                8,
                6,
                4
            ]
        },
        {
            "name": "depth-strength",
            "type": "ordinal",
            "domain": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "range": [
                1.0,
                0.8,
                0.6,
                0.5,
                0.4,
                0.3,
                0.2,
                0.1
            ]
        }
    ],
    "marks": [
        {
            "name": "nodes",
            "type": "text",
            "zindex": 1,
            "from": {
                "data": "node-data"
            },
            "on": [
                {
                    "trigger": "fix",
                    "modify": "node",
                    "values": "fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}"
                },
                {
                    "trigger": "!fix",
                    "modify": "node",
                    "values": "{fx: null, fy: null}"
                }
            ],
            "encode": {
                "enter": {
                    "text": {
                        "field": "name"
                    },
                    "baseline": {
                        "value": "middle"
                    },
                    "fontSize": {
                        "scale": "text-size",
                        "field": "depth"
                    }
                },
                "update": {
                    "x": {
                        "field": "x"
                    },
                    "y": {
                        "field": "y"
                    },
                    "dx": {
                        "signal": "textOffset * (datum.leftside ? -1 : 1)"
                    },
                    "angle": {
                        "signal": "datum.leftside ? datum.angle - 180 : datum.angle"
                    },
                    "align": {
                        "value": "center"
                    },
                    "fill": {
                        "value": "black"
                    }
                }
            },
            "transform": [
                {
                    "type": "force",
                    "iterations": 300,
                    "restart": {
                        "signal": "restart"
                    },
                    "static": {
                        "signal": "static"
                    },
                    "signal": "force",
                    "forces": [
                        {
                            "force": "center",
                            "x": {
                                "signal": "cx"
                            },
                            "y": {
                                "signal": "cy"
                            }
                        },
                        {
                            "force": "collide",
                            "radius": {
                                "signal": "nodeRadius"
                            }
                        },
                        {
                            "force": "nbody",
                            "strength": {
                                "signal": "nodeCharge"
                            }
                        },
                        {
                            "force": "link",
                            "links": "link-data",
                            "distance": {
                                "signal": "linkDistance"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "type": "path",
            "from": {
                "data": "link-data"
            },
            "interactive": false,
            "encode": {
                "update": {
                    "stroke": {
                        "value": "#ccc"
                    },
                    "strokeWidth": {
                        "value": 0.5
                    }
                }
            },
            "transform": [
                {
                    "type": "linkpath",
                    "require": {
                        "signal": "force"
                    },
                    "shape": "line",
                    "sourceX": "datum.source.x",
                    "sourceY": "datum.source.y",
                    "targetX": "datum.target.x",
                    "targetY": "datum.target.y"
                }
            ]
        }
    ]
}